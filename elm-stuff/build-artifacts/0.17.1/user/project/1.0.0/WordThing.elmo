var _user$project$WordThing$splitParagraphs = function (inputString) {
	var wrapInP = function (string) {
		return A2(
			_elm_lang$html$Html$p,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(string)
				]));
	};
	var paragraghStrings = A2(_elm_lang$core$String$split, '\n\n', inputString);
	return A2(_elm_lang$core$List$map, wrapInP, paragraghStrings);
};
var _user$project$WordThing$update = F2(
	function (event, model) {
		var _p0 = event;
		if (_p0.ctor === 'TextChanged') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{text: _p0._0, changesCount: model.changesCount + 1});
		} else {
			return _elm_lang$core$Native_Utils.update(
				model,
				{text: '', changesCount: 0});
		}
	});
var _user$project$WordThing$initialModel = {text: '', changesCount: 0};
var _user$project$WordThing$Model = F2(
	function (a, b) {
		return {text: a, changesCount: b};
	});
var _user$project$WordThing$Clear = {ctor: 'Clear'};
var _user$project$WordThing$TextChanged = function (a) {
	return {ctor: 'TextChanged', _0: a};
};
var _user$project$WordThing$view = function (model) {
	return A2(
		_elm_lang$html$Html$p,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Current: '),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'background-color', _1: 'red'}
							]))
					]),
				_user$project$WordThing$splitParagraphs(model.text)),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Time Changed',
					_elm_lang$core$Basics$toString(model.changesCount))),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Characters ',
					_elm_lang$core$Basics$toString(
						_elm_lang$core$String$length(model.text)))),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$WordThing$Clear)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Clear')
					])),
				A2(
				_elm_lang$html$Html$textarea,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$rows(20),
						_elm_lang$html$Html_Attributes$cols(50),
						_elm_lang$html$Html_Events$onInput(_user$project$WordThing$TextChanged),
						_elm_lang$html$Html_Attributes$value(model.text)
					]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$WordThing$main = {
	main: _elm_lang$html$Html_App$beginnerProgram(
		{model: _user$project$WordThing$initialModel, view: _user$project$WordThing$view, update: _user$project$WordThing$update})
};
